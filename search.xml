<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>协同过滤</title>
      <link href="/2019/08/10/ai-xue-xi-xie-tong-guo-lu/"/>
      <url>/2019/08/10/ai-xue-xi-xie-tong-guo-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="推荐算法–协同过滤"><a href="#推荐算法–协同过滤" class="headerlink" title="推荐算法–协同过滤"></a>推荐算法–协同过滤</h2><h2 id="什么是协同过滤"><a href="#什么是协同过滤" class="headerlink" title="什么是协同过滤"></a>什么是协同过滤</h2><p>协同过滤推荐（Collaborative Filtering recommendation）是在信息过滤和信息系统中正迅速成为一项很受欢迎的技术。与传统的基于内容过滤直接分析内容进行推荐不同，协同过滤分析用户兴趣，在用户群中找到指定用户的相似（兴趣）用户，综合这些相似用户对某一信息的评价，形成系统对该指定用户对此信息的喜好程度预测。<br>协同过滤是迄今为止最成功的推荐系统技术，被应用在很多成功的推荐系统中。电子商务推荐系统可根据其他用户的评论信息，采用协同过滤技术给目标用户推荐商品。<br>协同过滤算法主要分为基于启发式和基于模型式两种。<br>其中，基于启发式的协同过滤算法，又可以分为基于用户的协同过滤算法（User-Based）和基于项目的协同过滤算法（Item-Based）。<br>启发式协同过滤算法主要包含3个步骤：<br>1）收集用户偏好信息；<br>2）寻找相似的商品或者用户；<br>3）产生推荐。<br>“巧妇难为无米之炊”，协同过滤的输入数据集主要是用户评论数据集或者行为数据集。这些数据集主要又分为显性数据和隐性数据两种类型。其中，显性数据主要是用户打分数据，譬如用户对商品的打分，五分制的1分，2分等。<br>但是，显性数据存在一定的问题，譬如用户很少参与评论，从而造成显性打分数据较为稀疏；用户可能存在欺诈嫌疑或者仅给定了部分信息；用户一旦评分，就不会去更新用户评分分值等。<br>而隐性数据主要是指用户点击行为、购买行为和搜索行为等，这些数据隐性地揭示了用户对商品的喜好。<br>隐性数据也存在一定的问题，譬如如何识别用户是为自己购买商品，还是作为礼物赠送给朋友等。</p><h1 id="1-基于用户的协同过滤"><a href="#1-基于用户的协同过滤" class="headerlink" title="1.基于用户的协同过滤"></a>1.基于用户的协同过滤</h1><p>用相似统计的方法得到具有相似爱好或者兴趣的相邻用户，所以称之为以用户为基础（User-based）的协同过滤或基于邻居的协同过滤(Neighbor-based Collaborative Filtering)。</p><h2 id="1-1方法步骤："><a href="#1-1方法步骤：" class="headerlink" title="1.1方法步骤："></a>1.1方法步骤：</h2><p>1.收集用户信息</p><p>收集可以代表用户兴趣的信息。一般的网站系统使用评分的方式或是给予评价，这种方式被称为“主动评分”。另外一种是“被动评分”，是根据用户的行为模式由系统代替用户完成评价，不需要用户直接打分或输入评价数据。电子商务网站在被动评分的数据获取上有其优势，用户购买的商品记录是相当有用的数据。<br>2.最近邻搜索(Nearest neighbor search, NNS)<br>以用户为基础（User-based）的协同过滤的出发点是与用户兴趣爱好相同的另一组用户，就是计算两个用户的相似度。例如：查找n个和A有相似兴趣用户，把他们对M的评分作为A对M的评分预测。一般会根据数据的不同选择不同的算法，目前较多使用的相似度算法有Pearson Correlation Coefficient（皮尔逊相关系数）、Cosine-based Similarity（余弦相似度）、Adjusted Cosine Similarity（调整后的余弦相似度）。<br>基于用户（User-Based）的协同过滤算法首先要根据用户历史行为信息，寻找与新用户相似的其他用户；同时，根据这些相似用户对其他项的评价信息预测当前新用户可能喜欢的项。<br>给定用户评分数据矩阵R，基于用户的协同过滤算法需要定义相似度函数s：U×U→R，以计算用户之间的相似度，然后根据评分数据和相似矩阵计算推荐结果。</p><h2 id="1-2如何选择合适的相似度计算方法"><a href="#1-2如何选择合适的相似度计算方法" class="headerlink" title="1.2如何选择合适的相似度计算方法"></a>1.2如何选择合适的相似度计算方法</h2><p>在协同过滤中，一个重要的环节就是如何选择合适的相似度计算方法，常用的两种相似度计算方法包括皮尔逊相关系数和余弦相似度等。皮尔逊相关系数的计算公式如下所示：<img src="https://img-blog.csdnimg.cn/20210405155940544.png" alt="在这里插入图片描述"></p><p>皮尔逊相关系数<br>其中，i表示项，例如商品；Iu表示用户u评价的项集；Iv表示用户v评价的项集；ru，i表示用户u对项i的评分；rv，i表示用户v对项i的评分；表示用户u的平均评分；表示用户v的平均评分。<br>另外，余弦相似度的计算公式如下所示：<img src="https://img-blog.csdnimg.cn/20210405155955138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>余弦相似度</p><h2 id="1-3计算用户u对未评分商品的预测分值"><a href="#1-3计算用户u对未评分商品的预测分值" class="headerlink" title="1.3计算用户u对未评分商品的预测分值"></a>1.3计算用户u对未评分商品的预测分值</h2><p>另一个重要的环节就是计算用户u对未评分商品的预测分值。首先根据上一步中的相似度计算，寻找用户u的邻居集N∈U，其中N表示邻居集，U表示用户集。然后，结合用户评分数据集，预测用户u对项i的评分，计算公式如下所示：<img src="https://img-blog.csdnimg.cn/20210405160010175.png" alt="在这里插入图片描述"></p><p>预测用户u对项i的评分<br>其中，s（u，u’）表示用户u和用户u’的相似度。</p><h2 id="1-4通过例子理解"><a href="#1-4通过例子理解" class="headerlink" title="1.4通过例子理解"></a>1.4通过例子理解</h2><p>假设有如下电子商务评分数据集，预测用户C对商品4的评分。<img src="https://img-blog.csdnimg.cn/20210405160205607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>电子商务评分数据集<br>表中？表示评分未知。根据基于用户的协同过滤算法步骤，计算用户C对商品4的评分，其步骤如下所示。<br>（1）寻找用户C的邻居<br>从数据集中可以发现，只有用户A和用户D对商品4评过分，因此候选邻居只有2个，分别为用户A和用户D。用户A的平均评分为4，用户C的平均评分为3.667，用户D的平均评分为3。<img src="https://img-blog.csdnimg.cn/20210405160221554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>根据皮尔逊相关系数公式：<br>红色区域计算C用户与A用户，用户C和用户A的相似度为：<img src="https://img-blog.csdnimg.cn/20210405160234815.png" alt="在这里插入图片描述"></p><p>蓝色区域计算C用户与D 用户的相似度为:<img src="https://img-blog.csdnimg.cn/2021040516031599.png" alt="在这里插入图片描述"></p><p>C用户与D 用户的相似度<br>（2）预测用户C对商品4的评分<br>根据上述评分预测公式，计算用户C对商品4的评分，如下所示：<img src="https://img-blog.csdnimg.cn/20210413165053129.png" alt="在这里插入图片描述"></p><p>用户C对商品4的评分<br>依此类推，可以计算出其他未知的评分。</p><h2 id="1-5代码实现"><a href="#1-5代码实现" class="headerlink" title="1.5代码实现"></a>1.5代码实现</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> math <span class="token keyword">import</span> sqrt<span class="token keyword">def</span> <span class="token function">pex</span><span class="token punctuation">(</span>ls_1<span class="token punctuation">,</span>ls_2<span class="token punctuation">,</span>M<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#求余弦相似度的函数</span>    fenzi<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#余弦相似度分子</span>    fenmu<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#分母</span>    abs_1<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#分母左边绝对值里的值</span>    abs_2<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#分母右边绝对值里的值</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">:</span>        fenzi <span class="token operator">+=</span> ls_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> ls_2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        abs_1 <span class="token operator">+=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>ls_1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>        abs_2 <span class="token operator">+=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>ls_2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>        fenmu<span class="token operator">=</span>sqrt<span class="token punctuation">(</span>abs_1<span class="token operator">*</span>abs_2<span class="token punctuation">)</span>    <span class="token keyword">return</span> fenzi<span class="token operator">/</span>fenmu<span class="token comment">#ls_1,ls_2用户相关系数</span><span class="token keyword">def</span> <span class="token function">yuping</span><span class="token punctuation">(</span>lst_u<span class="token punctuation">,</span>R<span class="token punctuation">,</span>u_u<span class="token punctuation">,</span>M<span class="token punctuation">,</span>N<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#求预测评分函数</span>    fenzi<span class="token operator">=</span><span class="token number">0</span>    fenmu<span class="token operator">=</span><span class="token number">0</span>    aver_1<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#平均值</span>    aver_2<span class="token operator">=</span><span class="token number">0</span>    a<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#当前用户购买物品数量</span>    b<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> lst_u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            a<span class="token operator">+=</span><span class="token number">1</span>            aver_1 <span class="token operator">+=</span>lst_u<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    aver_1<span class="token operator">=</span>aver_1<span class="token operator">/</span>a    <span class="token keyword">for</span> o <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> R<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> R<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>                    b<span class="token operator">+=</span><span class="token number">1</span>                    aver_2 <span class="token operator">+=</span>R<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>            aver_2<span class="token operator">=</span>aver_2<span class="token operator">*</span><span class="token number">1.00</span><span class="token operator">/</span>b            fenzi<span class="token operator">+=</span>u_u<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">-</span>aver_2<span class="token punctuation">)</span>            fenmu<span class="token operator">+=</span><span class="token builtin">abs</span><span class="token punctuation">(</span>pex<span class="token punctuation">(</span>lst_u<span class="token punctuation">,</span>R<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">,</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> aver_1<span class="token operator">+</span>fenzi<span class="token operator">*</span><span class="token number">1.00</span><span class="token operator">/</span>fenmu    R<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">#生成原始矩阵R</span>            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#输入二维数组，同行数字用空格分隔，不同行则用回车换行</span>N<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>R<span class="token punctuation">)</span><span class="token comment">#列长</span>M<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#行长</span>u_u<span class="token operator">=</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#建立用户与用户之间相关性矩阵u_u</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#建立一个对R的循环筛选未评分item并进行预测评分</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> n<span class="token operator">&lt;</span>m<span class="token punctuation">:</span>            u_u<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">=</span>pex<span class="token punctuation">(</span>R<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span>R<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">,</span>M<span class="token punctuation">)</span>            u_u<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span>u_u<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"得到的用户-用户相似度矩阵："</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>u_u<span class="token punctuation">)</span><span class="token comment">#打印用户与用户相关系数矩阵</span>user<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'E'</span><span class="token punctuation">]</span><span class="token comment">#用户集合</span>items<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'p1'</span><span class="token punctuation">,</span><span class="token string">'p2'</span><span class="token punctuation">,</span><span class="token string">'p3'</span><span class="token punctuation">,</span><span class="token string">'p4'</span><span class="token punctuation">]</span><span class="token comment">#商品集合</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#建立一个对R循环寻找未评分项并且对未评分项进行预测</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> R<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            R<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">=</span>yuping<span class="token punctuation">(</span>R<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span>R<span class="token punctuation">,</span>u_u<span class="token punctuation">,</span>M<span class="token punctuation">,</span>N<span class="token punctuation">,</span>n<span class="token punctuation">)</span>            <span class="token keyword">if</span> R<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"将商品{:}推荐给用户{:}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">,</span>user<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"评分预测矩阵R^:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{:.2f}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>R<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-基于项目的协同过滤"><a href="#2-基于项目的协同过滤" class="headerlink" title="2.基于项目的协同过滤"></a>2.基于项目的协同过滤</h1><p>以用户为基础的协同推荐算法随着用户数量的增多，计算的时间就会变长，所以在2001年Sarwar提出了基于项目的协同过滤推荐算法(Item-based Collaborative Filtering Algorithms)。以项目为基础的协同过滤方法有一个基本的假设“能够引起用户兴趣的项目，必定与其之前评分高的项目相似”，通过计算项目之间的相似性来代替用户之间的相似性。</p><h2 id="2-1方法步骤："><a href="#2-1方法步骤：" class="headerlink" title="2.1方法步骤："></a>2.1方法步骤：</h2><p>1.收集用户信息<br>同以用户为基础（User-based）的协同过滤。<br>2.针对项目的最近邻搜索<br>先计算已评价项目和待预测项目的相似度，并以相似度作为权重，加权各已评价项目的分数，得到待预测项目的预测值。例如：要对项目 A 和项目 B 进行相似性计算，要先找出同时对 A 和 B 打过分的组合，对这些组合进行相似度计算，常用的算法同以用户为基础（User-based）的协同过滤。<br>3.产生推荐结果<br>以项目为基础的协同过滤不用考虑用户间的差别，所以精度比较差。但是却不需要用户的历史数据，或是进行用户识别。对于项目来讲，它们之间的相似性要稳定很多，因此可以离线完成工作量最大的相似性计算步骤，从而降低了在线计算量，提高推荐效率，尤其是在用户多于项目的情形下尤为显著。<br>基于项目（Item-Based）的协同过滤算法是常见的另一种算法。与User-Based协同过滤算法不一样的是，Item-Based协同过滤算法计算Item之间的相似度，从而预测用户评分。也就是说该算法可以预先计算Item之间的相似度，这样就可提高性能。Item-Based协同过滤算法是通过用户评分数据和计算的Item相似度矩阵，从而对目标Item进行预测的。</p><h2 id="2-2相似度计算方法"><a href="#2-2相似度计算方法" class="headerlink" title="2.2相似度计算方法"></a>2.2相似度计算方法</h2><p>和User-Based协同过滤算法类似，需要先计算Item之间的相似度。并且，计算相似度的方法也可以采用皮尔逊关系系数或者余弦相似度，这里给出一种电子商务系统常用的相似度计算方法，即基于物品的协同过滤算法，其中相似度计算公式如下所示：<img src="https://img-blog.csdnimg.cn/20210405160835530.png" alt="在这里插入图片描述"><br>这里，分母|N(i)|是喜欢物品i的用户数，而分子|N(i)∩N(j)|是同时喜欢物品i和j的用户，但是如果物品j很热门，就会导致Wij很大接近于1。因此避免推荐出热门的物品，我们使用下面的公式：<img src="https://img-blog.csdnimg.cn/20210405160900715.png" alt="在这里插入图片描述"><br>这里的分子是共同喜欢物品i和物品j的用户数<br>分母是喜欢物品i的用户数和喜欢物品j的用户数乘积开根号</p><p>基于物品的相似度<br>从上面的定义可以看出，在协同过滤中两个物品产生相似度是因为他们共同被很多用户喜欢，也就是说每个用户都可以通过他们的历史兴趣列表给物品“贡献”相似度。<br>计算物品相似度首先建立用户-物品倒排表（即对每个用户建立一个包含他喜欢的物品的列表），然后对每个用户，将他物品列表中的物品两两在共现矩阵中加1。</p><p>若用户的访问记录如下：<br><img src="https://img-blog.csdnimg.cn/20210414205949823.png" alt="在这里插入图片描述"></p><p>则相似度函数的代码<img src="https://img-blog.csdnimg.cn/20210405160918484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图例<img src="https://img-blog.csdnimg.cn/20210405160943120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>根据矩阵计算每两个物品之间的相似度wij。<br>///若想了解整个过程的具体代码，私信。</p><h2 id="2-3用户u对于物品j的兴趣"><a href="#2-3用户u对于物品j的兴趣" class="headerlink" title="2.3用户u对于物品j的兴趣"></a>2.3用户u对于物品j的兴趣</h2><p>得到物品之间的相似度后，可以根据如下公式计算用户u对于物品j的兴趣：</p><p>用户u对于物品j的兴趣<img src="https://img-blog.csdnimg.cn/20210405160955988.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021040516142188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这里N(u)是用户喜欢的物品的集合，S(j,K)是和物品j最相似的K个物品的集合，wji是物品j和i的相似度，rui是用户u对物品i的兴趣。（对于隐反馈数据集，如果用户u对物品i有过行为，即可令rui=1。）该公式的含义是，和用户历史上感兴趣的物品越相似的物品，越有可能在用户的推荐列表中获得比较高的排名。<br>当我们看到这里的时候很可能由于自己功底不足，很难看懂公式中的i∈N(u)∩S(j,K)。<br>我们来看另外一种计算方式：<img src="https://img-blog.csdnimg.cn/20210405161433313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>矩阵<br>其中，Pa为新用户对已有产品的向量，T为物品的共现矩阵，得到的P`a为新用户对每个产品的兴趣度。<br>那么就可以理解上述公式的i∈N(u)∩S(j,K)，我们在下面的例子中详细讲解。</p><h2 id="2-4举例"><a href="#2-4举例" class="headerlink" title="2.4举例"></a>2.4举例</h2><p>现有用户的访问的记录如下图所示：<img src="https://img-blog.csdnimg.cn/20210414205949823.png" alt="在这里插入图片描述"></p><p>用户的访问<br>喜欢物品i也喜欢物品j的人数的共现矩阵：<img src="https://img-blog.csdnimg.cn/20210418104138640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>喜欢物品i的总人数<br>a：2      b：3      c：3     d：4     e：1</p><p>共现矩阵<br>通过公式计算相似度：Wa,b在这里插入图片描述</p><p><img src="https://img-blog.csdnimg.cn/20210418103734906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>以此类推得到相似度的共现矩阵：<img src="https://img-blog.csdnimg.cn/20210418105922847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>相似度的共现矩阵<br>此时对于用户A，访问的a,b,d三个物品，那么可以看做向量P：<br><img src="https://img-blog.csdnimg.cn/20210405161528791.png" alt="在这里插入图片描述"></p><p>那么P`为矩阵相乘：<img src="https://img-blog.csdnimg.cn/20210418113052123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>P`<br>此时得到了对于用户A，c和e的兴趣度，由于c的兴趣度大于d的兴趣度，因此把物品c推荐给用户E。</p><h2 id="2-5理解公式i∈N-u-∩S-j-K"><a href="#2-5理解公式i∈N-u-∩S-j-K" class="headerlink" title="2.5理解公式i∈N(u)∩S(j,K)"></a>2.5理解公式i∈N(u)∩S(j,K)</h2><p>那么现在我们来理解公式i∈N(u)∩S(j,K)：<br>对于用户A，已经访问了a,b,d，那么，N(u)={a,b,d}；还有两个未访问物品c,e，那么j={c,e}；<br>当j=c时，对于和物品j最相似的K个物品的集合为{b，d}，那么S(j,K)={b,d}；得出N(u)∩S(j,K)={b,d},如下图所示：<img src="https://img-blog.csdnimg.cn/20210418104138640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>再来看矩阵相乘中的c行，乘以P，实际上就是上述N(u)∩S(j,K)={a,d}的相似度求和。<img src="https://img-blog.csdnimg.cn/20210418114128541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>同理，当j=e时，对于和物品j最相似的K个物品的集合为{b,c}，那么S(j,K)={b,c}；得出N(u)∩S(j,K)={b};</p><p>再来看矩阵相乘中的e行，乘以P，实际上就是上述N(u)∩S(j,K)={b,d}的相似度求和。<img src="https://img-blog.csdnimg.cn/20210418114205484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2-6代码实现"><a href="#2-6代码实现" class="headerlink" title="2.6代码实现"></a>2.6代码实现</h2><p>第一种实现方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">用户<span class="token operator">/</span>物品 <span class="token operator">|</span> 物品a <span class="token operator">|</span> 物品b <span class="token operator">|</span> 物品c <span class="token operator">|</span> 物品d <span class="token operator">|</span> 物品e <span class="token operator">|</span>用户A     <span class="token operator">|</span>   √  <span class="token operator">|</span>   √   <span class="token operator">|</span>       <span class="token operator">|</span>    √  <span class="token operator">|</span>       <span class="token operator">|</span>用户B     <span class="token operator">|</span>      <span class="token operator">|</span>   √   <span class="token operator">|</span>   √   <span class="token operator">|</span>       <span class="token operator">|</span>   √   <span class="token operator">|</span>用户C     <span class="token operator">|</span>      <span class="token operator">|</span>       <span class="token operator">|</span>   √   <span class="token operator">|</span>       <span class="token operator">|</span>   √   <span class="token operator">|</span>用户d     <span class="token operator">|</span>      <span class="token operator">|</span>   √   <span class="token operator">|</span>   √   <span class="token operator">|</span>   √   <span class="token operator">|</span>       <span class="token operator">|</span>用户e     <span class="token operator">|</span>   √  <span class="token operator">|</span>       <span class="token operator">|</span>       <span class="token operator">|</span>   √   <span class="token operator">|</span>       <span class="token operator">|</span>————————————————<span class="token keyword">from</span> math <span class="token keyword">import</span> sqrt<span class="token keyword">import</span> operator<span class="token comment"># 1.构建用户--&gt;物品的倒排</span><span class="token keyword">def</span> <span class="token function">loadData</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> files<span class="token punctuation">:</span>        user<span class="token punctuation">,</span> score<span class="token punctuation">,</span> item <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span>        data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> score    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----1.用户：物品的倒排----"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token keyword">def</span> <span class="token function">loadData2</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> files<span class="token punctuation">:</span>        user<span class="token punctuation">,</span> item<span class="token punctuation">,</span> score<span class="token punctuation">,</span> timestamp <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span>        data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        data<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> score    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----1.用户：物品的倒排----"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token comment"># 2.计算</span><span class="token comment"># 2.1 构造物品--&gt;物品的共现矩阵</span><span class="token comment"># 2.2 计算物品与物品的相似矩阵</span><span class="token comment"># (这里采用的是余弦相似度算法计算的物品间的相似度)</span><span class="token keyword">def</span> <span class="token function">similarity</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 2.1 构造物品：物品的共现矩阵</span>    N <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment"># 喜欢物品i的总人数</span>    C <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment"># 喜欢物品i也喜欢物品j的人数</span>    <span class="token keyword">for</span> user<span class="token punctuation">,</span> item <span class="token keyword">in</span> data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> score <span class="token keyword">in</span> item<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            N<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>            N<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>            C<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> j<span class="token punctuation">,</span> scores <span class="token keyword">in</span> item<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> j <span class="token keyword">not</span> <span class="token keyword">in</span> i<span class="token punctuation">:</span>                    C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                    C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---2.构造的共现矩阵---"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'N:'</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'C:'</span><span class="token punctuation">,</span> C<span class="token punctuation">)</span>    <span class="token comment"># 2.2 计算物品与物品的相似矩阵</span>    W <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> item <span class="token keyword">in</span> C<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        W<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j<span class="token punctuation">,</span> item2 <span class="token keyword">in</span> item<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            W<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>            W<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">/</span> sqrt<span class="token punctuation">(</span>N<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> N<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---3.构造的相似矩阵---"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>W<span class="token punctuation">)</span>    <span class="token keyword">return</span> W<span class="token comment"># 3.根据用户的历史记录，给用户推荐物品</span><span class="token keyword">def</span> <span class="token function">recommandList</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> W<span class="token punctuation">,</span> user<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> N<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    rank <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> score <span class="token keyword">in</span> data<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 获得用户user历史记录，如A用户的历史记录为{'a': '1', 'b': '1', 'd': '1'}</span>        <span class="token keyword">for</span> j<span class="token punctuation">,</span> w <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>W<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span>operator<span class="token punctuation">.</span>itemgetter<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>k<span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 获得与物品i相似的k个物品</span>            <span class="token keyword">if</span> j <span class="token keyword">not</span> <span class="token keyword">in</span> data<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 该相似的物品不在用户user的记录里</span>                rank<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                rank<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token operator">*</span> w    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---4.推荐----"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>rank<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span>operator<span class="token punctuation">.</span>itemgetter<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>rank<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span>operator<span class="token punctuation">.</span>itemgetter<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>N<span class="token punctuation">]</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 用户，兴趣度，物品</span>    <span class="token comment"># 实例1</span>    uid_score_bid <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'A,1,a'</span><span class="token punctuation">,</span> <span class="token string">'A,1,b'</span><span class="token punctuation">,</span> <span class="token string">'A,1,d'</span><span class="token punctuation">,</span> <span class="token string">'B,1,b'</span><span class="token punctuation">,</span> <span class="token string">'B,1,c'</span><span class="token punctuation">,</span> <span class="token string">'B,1,e'</span><span class="token punctuation">,</span> <span class="token string">'C,1,c'</span><span class="token punctuation">,</span> <span class="token string">'C,1,d'</span><span class="token punctuation">,</span> <span class="token string">'D,1,b'</span><span class="token punctuation">,</span> <span class="token string">'D,1,c'</span><span class="token punctuation">,</span> <span class="token string">'D,1,d'</span><span class="token punctuation">,</span>                     <span class="token string">'E,1,a'</span><span class="token punctuation">,</span> <span class="token string">'E,1,d'</span><span class="token punctuation">]</span>    data <span class="token operator">=</span> loadData<span class="token punctuation">(</span>uid_score_bid<span class="token punctuation">)</span>  <span class="token comment"># 获得数据</span>    W <span class="token operator">=</span> similarity<span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># 计算物品相似矩阵</span>    recommandList<span class="token punctuation">(</span>data<span class="token punctuation">,</span> W<span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 推荐</span>      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20210418115034250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wyMzUwNTE5NjIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>内容来自老师讲课，本人水平有限可能有些错误，见谅。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
